<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\UsbCharger.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\UsbCharger.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Sat May 16 20:47:37 2020
<BR><P>
<H3>Maximum Stack Usage =        128 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; My_Board_Init &rArr; I2C_Init &rArr; mxc_delay &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[26]">DMA0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">DMA0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">BusFault_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[26]">DMA0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[27]">DMA1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[28]">DMA2_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[29]">DMA3_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[21]">FLC_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[22]">GPIO0_IRQHandler</a> from pb.o(i.GPIO0_IRQHandler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[40]">GPIOWAKE_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2e]">I2C1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from board.o(i.NMI_Handler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[a]">PF_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[42]">PreInit</a> from system_max32660.o(i.PreInit) referenced from startup_max32660.o(.text)
 <LI><a href="#[c]">RSV00_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[e]">RSV01_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[12]">RSV02_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[13]">RSV03_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[14]">RSV04_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[15]">RSV05_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[16]">RSV06_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1c]">RSV07_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1d]">RSV08_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1e]">RSV09_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1f]">RSV10_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[20]">RSV11_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[23]">RSV12_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[24]">RSV13_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[25]">RSV14_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2a]">RSV15_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2b]">RSV16_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2c]">RSV17_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2d]">RSV18_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[2f]">RSV19_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[30]">RSV20_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[31]">RSV21_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[32]">RSV22_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[33]">RSV23_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[34]">RSV24_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[35]">RSV25_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[36]">RSV26_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[37]">RSV27_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[38]">RSV28_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[39]">RSV29_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3a]">RSV30_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3b]">RSV31_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3c]">RSV32_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3d]">RSV33_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3e]">RSV34_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[3f]">RSV35_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1a]">SPI0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[1b]">SPI1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from mxc_delay.o(i.SysTick_Handler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[f]">TMR0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[10]">TMR1_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[11]">TMR2_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[18]">UART0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[19]">UART1_IRQHandler</a> from my_board.o(i.UART1_IRQHandler) referenced from startup_max32660.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[b]">WDT0_IRQHandler</a> from startup_max32660.o(.text) referenced from startup_max32660.o(RESET)
 <LI><a href="#[43]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_max32660.o(.text)
 <LI><a href="#[41]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[46]">max14748_int_isr</a> from my_board.o(i.max14748_int_isr) referenced from my_board.o(i.My_Board_Init)
 <LI><a href="#[45]">uart1_read_cb</a> from my_board.o(i.uart1_read_cb) referenced from my_board.o(i.My_Board_Init)
 <LI><a href="#[44]">uart1_write_cb</a> from my_board.o(i.uart1_write_cb) referenced from my_board.o(i.My_Board_Init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[43]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(.text)
</UL>
<P><STRONG><a name="[99]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[47]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _main_scatterload &rArr; __scatterload &rArr; __main_after_scatterload &rArr; SystemInit &rArr; SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4e]"></a>$Super$$__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>

<P><STRONG><a name="[9a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>FLC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>GPIOWAKE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RSV00_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RSV01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RSV02_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RSV03_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RSV04_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RSV05_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RSV06_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RSV07_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RSV08_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RSV09_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RSV10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>RSV11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>RSV12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>RSV13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>RSV14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RSV15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>RSV16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RSV17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>RSV18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>RSV19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>RSV20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>RSV21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RSV22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RSV23_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RSV24_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>RSV25_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RSV26_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RSV27_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RSV28_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>RSV29_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>RSV30_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>RSV31_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>RSV32_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>RSV33_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>RSV34_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>RSV35_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WDT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_max32660.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_init
</UL>

<P><STRONG><a name="[48]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __scatterload &rArr; __main_after_scatterload &rArr; SystemInit &rArr; SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[a1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__main_after_scatterload</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, system_max32660.o(i.$Sub$$__main_after_scatterload))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __main_after_scatterload &rArr; SystemInit &rArr; SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4f]"></a>Board_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Board_Init &rArr; Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Console_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[54]"></a>CommandOperation</STRONG> (Thumb, 362 bytes, Stack size 16 bytes, protocol.o(i.CommandOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CommandOperation &rArr; maxim_max14748_write_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max14748_write_reg
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max14748_read_reg
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max1726x_alert_get
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_sysok_get
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_int_get
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fsus_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fsus_clr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fltin_set
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fltin_clr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_cdir_get
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_reg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>Console_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, board.o(i.Console_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Console_Init &rArr; UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[22]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pb.o(i.GPIO0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO0_IRQHandler &rArr; GPIO_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>GPIO_Config</STRONG> (Thumb, 242 bytes, Stack size 0 bytes, gpio.o(i.GPIO_Config))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UART_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_Shutdown
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_Init
</UL>

<P><STRONG><a name="[62]"></a>GPIO_Handler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gpio.o(i.GPIO_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>GPIO_InGet</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.GPIO_InGet))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max1726x_alert_get
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_sysok_get
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_int_get
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_cdir_get
</UL>

<P><STRONG><a name="[73]"></a>GPIO_IntConfig</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, gpio.o(i.GPIO_IntConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
</UL>

<P><STRONG><a name="[74]"></a>GPIO_IntEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
</UL>

<P><STRONG><a name="[6f]"></a>GPIO_OutClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_OutClr))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fsus_clr
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fltin_clr
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_OutSet</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gpio.o(i.GPIO_OutSet))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fsus_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max14748_fltin_set
</UL>

<P><STRONG><a name="[72]"></a>GPIO_RegisterCallback</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gpio.o(i.GPIO_RegisterCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_RegisterCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
</UL>

<P><STRONG><a name="[65]"></a>I2C_Init</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = I2C_Init &rArr; mxc_delay &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Setspeed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
</UL>

<P><STRONG><a name="[94]"></a>I2C_MasterRead</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, i2c.o(i.I2C_MasterRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_MasterRead
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_read
</UL>

<P><STRONG><a name="[95]"></a>I2C_MasterWrite</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, i2c.o(i.I2C_MasterWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_MasterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_write
</UL>

<P><STRONG><a name="[6a]"></a>I2C_Shutdown</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, i2c.o(i.I2C_Shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Shutdown &rArr; SYS_I2C_Shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_Shutdown
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recover
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FreeCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
</UL>

<P><STRONG><a name="[53]"></a>LED_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_Init &rArr; LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[6d]"></a>LED_Off</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led.o(i.LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutClr
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[70]"></a>My_Board_Init</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, my_board.o(i.My_Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = My_Board_Init &rArr; I2C_Init &rArr; mxc_delay &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Shutdown
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_RegisterCallback
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IntEnable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_IntConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>PB_Init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pb.o(i.PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PB_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[42]"></a>PreInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_max32660.o(i.PreInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>SYS_ClockDisable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mxc_sys.o(i.SYS_ClockDisable))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_Shutdown
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[79]"></a>SYS_ClockEnable</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, mxc_sys.o(i.SYS_ClockEnable))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UART_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_Init
</UL>

<P><STRONG><a name="[75]"></a>SYS_Clock_Select</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, mxc_sys.o(i.SYS_Clock_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[69]"></a>SYS_I2C_GetFreq</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mxc_sys.o(i.SYS_I2C_GetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Setspeed
</UL>

<P><STRONG><a name="[66]"></a>SYS_I2C_Init</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, mxc_sys.o(i.SYS_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYS_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[6c]"></a>SYS_I2C_Shutdown</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, mxc_sys.o(i.SYS_I2C_Shutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SYS_I2C_Shutdown
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Shutdown
</UL>

<P><STRONG><a name="[7b]"></a>SYS_UART_Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, mxc_sys.o(i.SYS_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, mxc_delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler &rArr; mxc_delay_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, system_max32660.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
</UL>

<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, system_max32660.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SystemInit &rArr; SYS_Clock_Select &rArr; SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ClockDisable
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>

<P><STRONG><a name="[19]"></a>UART1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, my_board.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART1_IRQHandler &rArr; UART_Handler &rArr; UART_ReadHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_max32660.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>UART_ClearFlags</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(i.UART_ClearFlags))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_error_clear
</UL>

<P><STRONG><a name="[7d]"></a>UART_Handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, uart.o(i.UART_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_Handler &rArr; UART_ReadHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>UART_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_Init &rArr; SYS_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Console_Init
</UL>

<P><STRONG><a name="[82]"></a>UART_NumReadAvail</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(i.UART_NumReadAvail))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadHandler
</UL>

<P><STRONG><a name="[86]"></a>UART_NumWriteAvail</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(i.UART_NumWriteAvail))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteHandler
</UL>

<P><STRONG><a name="[80]"></a>UART_ReadAsync</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, uart.o(i.UART_ReadAsync))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_ReadAsync &rArr; UART_ReadHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadHandler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_get_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_async_read_via_uart1
</UL>

<P><STRONG><a name="[83]"></a>UART_Write</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, uart.o(i.UART_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_Write &rArr; uart_error_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_error_clear
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_get_lock
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_free_lock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_send_string_via_uart1
</UL>

<P><STRONG><a name="[85]"></a>UART_WriteByte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(i.UART_WriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
</UL>

<P><STRONG><a name="[a2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[93]"></a>delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, my_board.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_and_verify_reg
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_wait_dnr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_initialize_ez_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_get_serial_number
</UL>

<P><STRONG><a name="[41]"></a>main</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main &rArr; My_Board_Init &rArr; I2C_Init &rArr; mxc_delay &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_send_string_via_uart1
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_async_read_via_uart1
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_wait_dnr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_initialize_ez_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_get_serial_number
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_clear_por
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_check_por
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5d]"></a>max14748_cdir_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, my_board.o(i.max14748_cdir_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_cdir_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InGet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[58]"></a>max14748_fltin_clr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, my_board.o(i.max14748_fltin_clr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_fltin_clr
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutClr
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[57]"></a>max14748_fltin_set</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, my_board.o(i.max14748_fltin_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_fltin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutSet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[5a]"></a>max14748_fsus_clr</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, my_board.o(i.max14748_fsus_clr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_fsus_clr
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutClr
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[59]"></a>max14748_fsus_set</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, my_board.o(i.max14748_fsus_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_fsus_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_OutSet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[5f]"></a>max14748_int_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, my_board.o(i.max14748_int_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_int_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InGet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[46]"></a>max14748_int_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, my_board.o(i.max14748_int_isr))
<BR>[Address Reference Count : 1]<UL><LI> my_board.o(i.My_Board_Init)
</UL>
<P><STRONG><a name="[5e]"></a>max14748_sysok_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, my_board.o(i.max14748_sysok_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max14748_sysok_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InGet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[60]"></a>max1726x_alert_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, my_board.o(i.max1726x_alert_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max1726x_alert_get
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InGet
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[5b]"></a>maxim_max14748_read_reg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, max14748.o(i.maxim_max14748_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxim_max14748_read_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_write
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_read
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[55]"></a>maxim_max14748_write_reg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, max14748.o(i.maxim_max14748_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxim_max14748_write_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_write
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[87]"></a>maxim_max1726x_check_por</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, max1726x.o(i.maxim_max1726x_check_por))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxim_max1726x_check_por &rArr; maxim_max1726x_read_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>maxim_max1726x_clear_por</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, max1726x.o(i.maxim_max1726x_clear_por))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = maxim_max1726x_clear_por &rArr; maxim_max1726x_write_and_verify_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_and_verify_reg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>maxim_max1726x_get_serial_number</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, max1726x.o(i.maxim_max1726x_get_serial_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = maxim_max1726x_get_serial_number &rArr; maxim_max1726x_write_and_verify_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_and_verify_reg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>maxim_max1726x_initialize_ez_config</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, max1726x.o(i.maxim_max1726x_initialize_ez_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxim_max1726x_initialize_ez_config &rArr; maxim_max1726x_write_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_reg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>maxim_max1726x_read_reg</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, max1726x.o(i.maxim_max1726x_read_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxim_max1726x_read_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_write
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_read
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_wait_dnr
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_initialize_ez_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_get_serial_number
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_clear_por
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_check_por
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[88]"></a>maxim_max1726x_wait_dnr</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, max1726x.o(i.maxim_max1726x_wait_dnr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxim_max1726x_wait_dnr &rArr; maxim_max1726x_read_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>maxim_max1726x_write_and_verify_reg</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, max1726x.o(i.maxim_max1726x_write_and_verify_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = maxim_max1726x_write_and_verify_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_write
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_read
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_get_serial_number
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_clear_por
</UL>

<P><STRONG><a name="[56]"></a>maxim_max1726x_write_reg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, max1726x.o(i.maxim_max1726x_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = maxim_max1726x_write_reg &rArr; maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max32660_i2c1_write
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_initialize_ez_config
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CommandOperation
</UL>

<P><STRONG><a name="[8c]"></a>maxim_max32660_async_read_via_uart1</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, my_board.o(i.maxim_max32660_async_read_via_uart1))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = maxim_max32660_async_read_via_uart1 &rArr; UART_ReadAsync &rArr; UART_ReadHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadAsync
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>maxim_max32660_i2c1_read</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, my_board.o(i.maxim_max32660_i2c1_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxim_max32660_i2c1_read &rArr; I2C_MasterRead
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRead
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max14748_read_reg
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_and_verify_reg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>

<P><STRONG><a name="[90]"></a>maxim_max32660_i2c1_write</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, my_board.o(i.maxim_max32660_i2c1_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = maxim_max32660_i2c1_write &rArr; I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max14748_write_reg
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max14748_read_reg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_reg
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_write_and_verify_reg
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;maxim_max1726x_read_reg
</UL>

<P><STRONG><a name="[8d]"></a>maxim_max32660_send_string_via_uart1</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, my_board.o(i.maxim_max32660_send_string_via_uart1))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = maxim_max32660_send_string_via_uart1 &rArr; UART_Write &rArr; uart_error_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>mxc_delay</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, mxc_delay.o(i.mxc_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mxc_delay &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[78]"></a>mxc_delay_check</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, mxc_delay.o(i.mxc_delay_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mxc_delay_check
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
</UL>

<P><STRONG><a name="[7c]"></a>mxc_delay_handler</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, mxc_delay.o(i.mxc_delay_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = mxc_delay_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[77]"></a>mxc_delay_start</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mxc_delay.o(i.mxc_delay_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_init
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Timeout
</UL>

<P><STRONG><a name="[97]"></a>mxc_delay_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mxc_delay.o(i.mxc_delay_stop))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_check
</UL>

<P><STRONG><a name="[64]"></a>mxc_free_lock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mxc_lock.o(i.mxc_free_lock))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FreeCallback
</UL>

<P><STRONG><a name="[81]"></a>mxc_get_lock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mxc_lock.o(i.mxc_get_lock))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadAsync
</UL>

<P><STRONG><a name="[45]"></a>uart1_read_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, my_board.o(i.uart1_read_cb))
<BR>[Address Reference Count : 1]<UL><LI> my_board.o(i.My_Board_Init)
</UL>
<P><STRONG><a name="[44]"></a>uart1_write_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, my_board.o(i.uart1_write_cb))
<BR>[Address Reference Count : 1]<UL><LI> my_board.o(i.My_Board_Init)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[71]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, my_board.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_Board_Init
</UL>

<P><STRONG><a name="[63]"></a>I2C_FreeCallback</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, i2c.o(i.I2C_FreeCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_FreeCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_free_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Shutdown
</UL>

<P><STRONG><a name="[6b]"></a>I2C_Recover</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, i2c.o(i.I2C_Recover))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Shutdown
</UL>

<P><STRONG><a name="[68]"></a>I2C_Setspeed</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, i2c.o(i.I2C_Setspeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Setspeed
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_I2C_GetFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[7e]"></a>UART_ReadHandler</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, uart.o(i.UART_ReadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_ReadHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_NumReadAvail
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_free_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadAsync
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[7f]"></a>UART_WriteHandler</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, uart.o(i.UART_WriteHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WriteHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_NumWriteAvail
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_free_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[84]"></a>uart_error_clear</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, uart.o(i.uart_error_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart_error_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Write
</UL>

<P><STRONG><a name="[96]"></a>mxc_delay_init</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, mxc_delay.o(i.mxc_delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_start
</UL>

<P><STRONG><a name="[76]"></a>SYS_Clock_Timeout</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mxc_sys.o(i.SYS_Clock_Timeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SYS_Clock_Timeout &rArr; mxc_delay_start &rArr; mxc_delay_init &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_start
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mxc_delay_check
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Select
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
